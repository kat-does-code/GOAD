# Set up apt and install elk stack
- name: "Update cache"
  apt:
    update_cache: true
    cache_valid_time: 86400

- name: Add required dependencies.
  apt:
    name:
      - apt-transport-https
      - gnupg2
    state: present
    update_cache: yes

- name: Add Elasticsearch apt key.
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present

- name: Add Elasticsearch repository.
  apt_repository:
    repo: 'deb https://artifacts.elastic.co/packages/{{ elasticsearch_version }}/apt stable main'
    state: present
    update_cache: true

- name: Install elasticsearch
  apt:
    name: elasticsearch
    state: present

- name: Install kibana
  apt:
    name: kibana
    state: present
    
- name: elasticsearch change start timeout to 3min
  lineinfile:
    destfile: /usr/lib/systemd/system/elasticsearch.service
    regexp: 'TimeoutStartSec='
    line: 'TimeoutStartSec=180'

# # Create elasticsearch and kibana users
# - name: Ensure elasticsearch user exists
#   ansible.builtin.user:
#     name: elasticsearch
#     system: yes
#     shell: /usr/sbin/nologin
#     create_home: no

# - name: Ensure kibana user exists
#   ansible.builtin.user:
#     name: kibana
#     system: yes
#     shell: /usr/sbin/nologin
#     create_home: no


# - name: Set ownership for Elasticsearch config, data, and logs
#   ansible.builtin.file:
#     path: "{{ item }}"
#     state: directory
#     owner: elasticsearch
#     group: elasticsearch
#     recurse: yes
#   loop:
#     - /etc/elasticsearch
#     - /var/lib/elasticsearch
#     - /var/log/elasticsearch

# - name: Set ownership for Kibana config and logs
#   ansible.builtin.file:
#     path: "{{ item }}"
#     state: directory
#     owner: kibana
#     group: kibana
#     recurse: yes
#   loop:
#     - /etc/kibana
#     - /var/log/kibana
#     - /usr/share/kibana

# Copy config files 
- name: copy kibana config
  copy:
    src: kibana.yml
    dest: /etc/kibana/kibana.yml
    owner: "root"
    group: "kibana"
    mode: 0660

- name: copy elasticsearch config
  copy:
    src: elasticsearch.yml
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: "root"
    group: "elasticsearch"
    mode: 0660


# - name: copy elastic-agent config
#   copy:
#     src: elastic-agent.yml
#     dest: /etc/elastic-agent/elastic-agent.yml
#     owner: "root"
#     group: "elastic-agent"
#     mode: 0660

# Start and setup ELK components
# - name: start elastic-agent
#   service:
#     name: elastic-agent
#     state: started

- name: start elasticsearch
  service:
    name: elasticsearch
    state: started
    enabled: true

- name: reset elasticsearch password
  become: true
  command: /usr/share/elasticsearch/bin/elasticsearch-reset-password --batch --user elastic
  register: elastic_password_reset

- name: capture_elastic_passsword
  set_fact:
    elastic_password: "{{ elastic_password_reset.stdout | regex_search('New value: (\\S+)', '\\1') | first }}"

- name: create_kibana_token
  become: true
  command: /usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token --scope kibana --url https://192.168.56.50:9200
  register: enrollment_token

- name: Enroll kibana with the token
  shell: "sudo -u kibana /usr/share/kibana/bin/kibana-setup --enrollment-token {{ enrollment_token.stdout }}"
  become: true
  environment:
    TMPDIR: /tmp/.ansible-kibana

- name: Show creds
  debug:
    msg: |
      Elastic credentials: elastic:{{ elastic_password }} 

- name: start kibana
  service:
    name: kibana
    state: started
    enabled: true
